---
# Attributes to be set in a protected credentials file not stored with scripts
#GCLOUD_ACCOUNT_USER: "PROVIDED_IN_CREDENTIALS_YML"
#GCLOUD_ACCOUNT_DOMAIN: "PROVIDED_IN_CREDENTIALS_YML"
#BILLING_ID: "PROVIDED_IN_CREDENTIALS_YML"
#GCLOUD_ORG_ID: "PROVIDED_IN_CREDENTIALS_YML"

# Service Account
GCLOUD_ACCOUNT_ADMIN_USER: "{{ GCLOUD_ACCOUNT_USER }}"
GCLOUD_ACCOUNT_BILLING_ADMIN_USER: "{{ GCLOUD_ACCOUNT_USER }}"
GCLOUD_SERVICE_ACCOUNT_NAME: "{{ GCLOUD_ACCOUNT_USER }}-service-account"
GCLOUD_ACCOUNT_PROJECT_ADMIN_USER: "{{ GCLOUD_ACCOUNT_USER }}"
GCLOUD_SERVICE_ACCOUNT_EMAIL: "{{ GCLOUD_SERVICE_ACCOUNT_NAME }}@{{ PROJECT_ID }}.iam.gserviceaccount.com"
SERVICE_ACCOUNT_FILE_SUFFIX: "service-account-key"
GCLOUD_ACCOUNT_ADMIN_EMAIL: "{{ GCLOUD_ACCOUNT_ADMIN_USER }}@{{ GCLOUD_ACCOUNT_DOMAIN }}"
GCLOUD_ACCOUNT_EMAIL: "{{ GCLOUD_ACCOUNT_USER }}@{{ GCLOUD_ACCOUNT_DOMAIN }}"
GCLOUD_ACCOUNT_BILLING_ADMIN_EMAIL: "{{ GCLOUD_ACCOUNT_BILLING_ADMIN_USER }}@{{ GCLOUD_ACCOUNT_DOMAIN }}"
GCLOUD_ACCOUNT_PROJECT_ADMIN_EMAIL: "{{ GCLOUD_ACCOUNT_PROJECT_ADMIN_USER }}@{{ GCLOUD_ACCOUNT_DOMAIN }}"


WORK_DIR: "{{ playbook_dir | dirname | dirname }}/work_dir/{{ PROJECT_ID }}"
TOOLS_DIR: "{{ WORK_DIR }}/bin"

#GITHUB_REPO_URL: git@github.com:carlosfrias/terraform-modules.git
GITHUB_REPO_URL: https://github.com/apigee/terraform-modules.git
#GITHUB_REPO_DEST: "{{ WORK_DIR }}/terraform-projects"

AUTHORIZATION_KIND: serviceaccount

GCLOUD_FOLDER_ROLE_BINDINGS:
- roles/resourcemanager.folderAdmin

GCLOUD_ORG_ROLE_BINDINGS:
- "roles/owner"
- "roles/billing.admin"
- "roles/billing.projectManager"
- "roles/iam.serviceAccountAdmin"
- "roles/iam.serviceAccountKeyAdmin"
- "roles/resourcemanager.projectIamAdmin"
- "roles/resourcemanager.organizationAdmin"
- "roles/serviceusage.serviceUsageAdmin"
- "roles/serviceusage.apiKeysAdmin"
- "roles/iap.tunnelResourceAccessor"

GCLOUD_ORG_POLICIES_CONSTRAINTS_ENFORCEMENT_DISABLE:
- constraints/iam.disableServiceAccountKeyCreation
- constraints/iam.disableServiceAccountCreation
- constraints/compute.requireShieldedVm
- constraints/compute.requireOsLogin
- constraints/compute.skipDefaultNetworkCreation

GCLOUD_ORG_POLICIES_UPDATE:
- constraints/compute.trustedImageProjects
- constraints/compute.restrictSharedVpcSubnetworks
- constraints/compute.restrictSharedVpcHostProjects
- constraints/compute.restrictVpcPeering
- constraints/compute.vmExternalIpAccess
- constraints/compute.vmCanIpForward

#  Configure project admin role bindings
GCLOUD_PROJECT_ADMIN_ROLE_BINDINGS:
- "roles/resourcemanager.projectDeleter"
- "roles/resourcemanager.projectCreator"

GCLOUD_PROJECT_SERVICE_ACCOUNT_ROLE_BINDINGS:
- "roles/owner"
- "roles/compute.admin"
- "roles/compute.networkAdmin"
- "roles/compute.instanceAdmin"
- "roles/apigee.admin"
- "roles/networkmanagement.admin"
- "roles/cloudkms.admin"
- "roles/networkmanagement.viewer"
- "roles/iam.serviceAccountAdmin"
- "roles/iam.serviceAccountUser"
- "roles/iam.serviceAccountCreator"
- "roles/iam.serviceAccountKeyAdmin"
#- "roles/compute.loadBalancerAdmin"

GCLOUD_PROJECT_SERVICES:
- "compute.googleapis.com"
- "apigee.googleapis.com"
- "servicenetworking.googleapis.com"
- "cloudresourcemanager.googleapis.com"
- "serviceusage.googleapis.com"
- "iam.googleapis.com"
- "iamcredentials.googleapis.com"
- "apigeeconnect.googleapis.com"
#- "dns.googleapis.com"
#- "cloudkms.googleapis.com"
#- "sourcerepo.googleapis.com"
#- "container.googleapis.com"
#- "containerregistry.googleapis.com"
#- "stackdriver.googleapis.com"
#- "meshca.googleapis.com"
#- "meshtelemetry.googleapis.com"
#- "meshconfig.googleapis.com"
#- "anthos.googleapis.com"
#- "gkeconnect.googleapis.com"
#- "gkehub.googleapis.com"
#- "cloudbuild.googleapis.com"
#- "secretmanager.googleapis.com"
#- "pubsub.googleapis.com"
#- "monitoring.googleapis.com"
#- "logging.googleapis.com"
#- "cloudtrace.googleapis.com"
#- "privateca.googleapis.com"

